FROM ubuntu:18.04
MAINTAINER Henry Borchers <henryborchers@yahoo.com>

#USER root

# ADD https://cmake.org/files/v3.13/cmake-3.13.5-Linux-x86_64.sh /cmake-Linux-x86_64.sh
RUN apt-get update && \
    apt-get install -y software-properties-common wget

RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | apt-key add - && \
    apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main'

RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key| apt-key add && \
    apt-add-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main"



RUN apt-get update -y && \
    apt-get install \
    ffmpeg \
    libavcodec-dev \
    libavdevice-dev \
    libavfilter-dev \
    libavformat-dev \
    libavresample-dev \
    libavutil-dev \
    libpostproc-dev \
    libswresample-dev \
    libswscale-dev \
    libgtk2.0-dev \
    python3-all-dev \
    python3-venv \
    python3 \
    python3-wheel \
    python3.7-venv \
    tox \
    python3-pip \
    valgrind \
    build-essential \
    doxygen \
    graphviz \
    git \
    tree \
    gcovr \
    clang-tidy \
    clang-tidy-7 \
#    clang-tidy-9 \
    libclang-common-7-dev \
#    clang-9 clang-tools-9 clang-9-doc libclang-common-9-dev libclang-9-dev libclang1-9 clang-format-9 \
    cppcheck \
    cmake \
    swig3.0 -y

# RUN mkdir /opt/cmake
# RUN sh /cmake-Linux-x86_64.sh --prefix=/opt/cmake --skip-license
# RUN ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake
# RUN ln -s /opt/cmake/bin/cpack /usr/local/bin/cpack
# RUN ln -s /opt/cmake/bin/ctest /usr/local/bin/ctest
RUN wget https://libsdl.org/release/SDL2-2.0.7.tar.gz && \
    tar -xvzf SDL2-2.0.7.tar.gz && \
    cd SDL2-2.0.7 && \
    mkdir build && \
    cd build && \
    cmake .. && \
    cmake --build . --config Release && \
    cmake --build . --config Release --target install && \
    rm -rf SDL2-2.0.7

# Needs this otherwise tox will not have permissions to 
# create virtual environments
# Idea from https://issues.jenkins-ci.org/browse/JENKINS-47026?jql=text%20~%20%22virtualenv%22%20ORDER%20BY%20updated%20DESC

ARG USER_ID=1000
ARG GROUP_ID=1000

RUN groupadd -g $GROUP_ID user && \
    useradd -u $USER_ID -s /bin/sh -m -d /home/user  -g user user

ENV CONAN_NON_INTERACTIVE=1
RUN python3 -m pip install --upgrade pip && python3 -m pip install conan
RUN conan remote add bincrafters "https://api.bintray.com/conan/bincrafters/public-conan"

# COPY ci/dockerfiles/conan/remotes.json /home/user/.conan/remotes.json
ENV CONAN_USER_HOME=/home/user/

COPY ci/dockerfiles/conan/profiles/ /home/user/.conan/profiles/
ENV CONAN_DEFAULT_PROFILE_PATH=/home/user/.conan/profiles/x64

ADD conanfile.py /tmp/
RUN conan install /tmp/ --no-imports && conan remove --locks -f

RUN chown -R user:user /home/user/

# ==========================================================